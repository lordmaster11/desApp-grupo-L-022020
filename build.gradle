plugins {
	id 'org.springframework.boot' version '2.3.3.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
	id 'war'
	id 'jacoco'
	id 'idea'
	id 'eclipse'
}

eclipseJdt {
	doLast {
		ant.propertyfile(file: ".settings/org.eclipse.core.resources.prefs") {
			ant.entry(key: "eclipse.preferences.version", value: "1")
			ant.entry(key: "encoding/<project>", value: "utf-8")
		}
	}
}

compileJava.options.encoding = 'utf-8'
compileTestJava.options.encoding = 'utf-8'

apply plugin: 'java'
apply plugin: 'jacoco'

group = 'ar.edu.unq.desapp.grupo-L-022020'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenLocal()
    jcenter()
	mavenCentral()
}

dependencies {
	implementation 'org.mockito:mockito-core:3.5.10'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.security:spring-security-test'
	compile 'io.springfox:springfox-swagger2:3.0.0'
	compile 'org.springdoc:springdoc-openapi-ui:1.4.8'
}

jacocoTestReport {
    dependsOn test

    reports {
        xml.enabled = true
        html.enabled = true
    }
    afterEvaluate {
    	classDirectories.setFrom(files(classDirectories.files.collect {
    		fileTree(dir: it, exclude: ['**/repositories/*', 
							    		'**/services/*', 
							    		'**/webservices/*',
							    		'**/errors/*', 
							    		'**/exceptions/*'])
    	}))
    }
}

//check.dependsOn jacocoTestReport

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}